{"version":3,"file":"static/js/424.0bc105c5.chunk.js","mappings":"4JAaA,IAVc,WACd,OAAO,SAAC,KAAD,CACLA,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAEV,C,2ECVD,EAAgC,qCAAhC,EAA4E,4BAA5E,EAA+G,4B,SC0B/G,EArBsB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAEjBC,GAAWC,EAAAA,EAAAA,MAChB,OAAQ,eAAIC,UAAWC,EAAf,SACAJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAKC,EAAR,EAAQA,MAAR,OAChB,eAAaJ,UAAWC,EAAxB,UACG,SAAC,KAAD,CAAMI,GAAE,WAAMF,GAAMG,MAAO,CAACC,KAAMT,GAAWE,UAAWC,EAAxD,SACAG,KAFMD,EADO,KAOzB,C,oHCDG,IAIA,EAJkB,CACdK,oBAfR,SAA6BC,GAO3B,OAAOC,MAAM,GAAD,OATG,6CASH,iBAAqBD,EAArB,8CANM,CACfE,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAInBC,MAAK,SAAAC,GACD,OAAIA,EAASC,GACHD,EAASE,OAEZC,QAAQC,OAAO,IAAIC,MAAJ,aACrB,GAAE,GCdV,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAwH,qCAAxH,EAAgL,oCAAhL,EAA4N,yB,SCyC5N,MApCA,YAAqC,IAAhBC,EAAe,EAAfA,aACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KAaF,OACI,mBAAQvB,UAAWC,EAAnB,UACA,kBAAMD,UAAWC,EAAmBuB,SATjB,SAAAC,GACfA,EAAMC,iBACNL,EAAaZ,GACbc,EAAS,GACV,EAKH,WACA,mBAAQI,KAAK,SAAS3B,UAAWC,EAAjC,UACG,iBAAMD,UAAWC,EAAjB,SAA0C,cACzC,kBAAQ0B,KAAK,OACb3B,UAAWC,EACX2B,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,QACLC,MAAOvB,EACPwB,SAvBoB,SAAAR,GACtBF,EAASE,EAAMS,cAAcF,MAAMG,cACpC,QAwBH,E,SCaF,EAvCe,WACb,OAA0Bb,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOc,EAAP,KAAaC,EAAb,KACA,GAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAAkCjB,EAAAA,EAAAA,WAAS,GAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAAsBnB,EAAAA,EAAAA,UAAS,MAArBoB,GAAV,eAEM5C,GAAWC,EAAAA,EAAAA,OAEjB4C,EAAAA,EAAAA,YAAU,WACHlC,IACLgC,GAAa,GACbG,EAAAA,oBAA8BnC,GAAOK,MAAK,SAAC+B,GAExC,IAAMC,EAAeD,EAAKE,QAC3BR,GAAU,OAAKO,GACf,IAEHE,OAAM,SAAAC,GAAUP,EAASO,EAAO,IAAEC,SAAQ,WAC3CT,GAAa,EACJ,IAAE,GAAE,CAAChC,EAAO2B,IASrB,OACE,6BACD,SAAC,EAAD,CAAWf,aAPa,SAAAZ,GACvBc,EAASd,GACT8B,EAAU,IACVF,EAAQ,EACT,IAICG,IAAa,SAACW,EAAA,EAAD,IACZb,EAAOc,OAAS,GAAI,SAACC,EAAA,EAAD,CAAexD,WAAYyC,EAAQhC,MAAO,CAAEC,KAAMT,KAAgB,MACvF,SAAC,KAAD,MAGH,C","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","components/services/searchMovies-api.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/movies.jsx"],"sourcesContent":["import { RotatingLines } from  'react-loader-spinner'\n\n\nconst Loader =()=>{\nreturn(<RotatingLines\n  strokeColor=\"grey\"\n  strokeWidth=\"5\"\n  animationDuration=\"0.75\"\n  width=\"96\"\n  visible={true}\n/>)\n}\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"MoviesGallery\":\"MoviesGallery_MoviesGallery__tqAIU\",\"item\":\"MoviesGallery_item__rY1Lr\",\"Link\":\"MoviesGallery_Link__-IlD5\"};","\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Styles from 'components/MoviesGallery/MoviesGallery.module.css'\n\nconst MoviesGallery = ({ moviesList }) => {\n   \n  const location = useLocation()\n   return (<ul className={Styles.MoviesGallery} >\n          {moviesList.map(({ id,  title }) => (\n          <li key={id} className={Styles.item} >\n             <Link to={`/${id}`} state={{from: location}} className={Styles.Link}>\n            {title}\n              </Link>\n            </li>))}\n  </ul>)\n}\n     \n  \nMoviesGallery.propTypes ={\n    moviesList: PropTypes.array.isRequired\n \n }        \n\n\n\nexport default MoviesGallery\n","const BASE_URL = 'https://api.themoviedb.org/3/search/movie?'\n\nfunction fetchMoviesOnSearch(query){\n    const options = {\n     headers: {\n       accept: 'application/json',\n       Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwM2FlMjVjMDdmZmJkZTQ4MzNlOTI4MzAwODQ5MTY0ZSIsInN1YiI6IjY0NmNlYTMyYzM1MTRjMmIwYmY0MGJhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-xetNvo1KnrMsW_faMs9w9HxpC-ebylSqWAUjThjL_g'\n     }};\n   \n  return fetch(`${BASE_URL}query=${query}&include_adult=false&language=en-US&page=1`, options)\n  .then(response => {\n       if (response.ok) {\n          return response.json();\n        }\n       return Promise.reject(new Error(`No movie `));\n       })}\n    const apiSearch = {\n        fetchMoviesOnSearch,\n    }\n    \n    export default apiSearch;","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchForm_button\":\"Searchbar_SearchForm_button__OB9qt\",\"SearchForm_label\":\"Searchbar_SearchForm_label__05Aqp\",\"input\":\"Searchbar_input__19umw\"};","import {  useState } from \"react\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport Styles from 'components/Searchbar/Searchbar.module.css'\n\n\nfunction Searchbar ({onSubmitForm}) {\n  const [query, setQuery] = useState('')\n   \n  const  handleNameChange = event => {\n      setQuery(event.currentTarget.value.toLowerCase())\n    };\n    \n  const handleSubmit = event => {\n        event.preventDefault();\n        onSubmitForm(query);\n        setQuery('');\n      };\n\n   \nreturn(\n    <header className={Styles.searchbar}>\n    <form className={Styles.SearchForm} onSubmit={handleSubmit}>\n    <button type=\"submit\" className={Styles.SearchForm_button}>\n       <span className={Styles.SearchForm_label}>Search</span></button>\n        <input  type=\"text\"\n        className={Styles.input}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name=\"query\"\n        value={query}\n        onChange={handleNameChange}/>\n    </form>\n    </header>\n)}\n\nSearchbar.propTypes ={\n  onSubmitForm: PropTypes.func.isRequired\n }        \n\n\nexport default Searchbar\n\n","import {  Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\nimport Loader from \"components/Loader/Loader\";\nimport apiSearch from 'components/services/searchMovies-api'\nimport Searchbar from 'components/Searchbar/Searchbar'\nimport MoviesGallery from \"components/MoviesGallery/MoviesGallery\";\n\n\n\nconst Movies = () => {\n  const [query, setQuery] = useState('')\n  const [page, setPage] = useState(1)\n  const [movies, setMovies] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [ , setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(()=> {\n    if (!query) return;\n    setIsLoading(true)\n    apiSearch.fetchMoviesOnSearch(query).then((data) => \n   \n      {const searchMovies = data.results\n      setMovies([ ...searchMovies])\n     }\n      )\n  .catch(error => {setError(error)}).finally(() => {\n  setIsLoading(false)\n          })}, [query, page])\n  \n  \n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setMovies([])\n    setPage(1)\n  }\n  return (\n    <main>\n   <Searchbar onSubmitForm={handleFormSubmit}/>\n   {isLoading && <Loader/>}\n   { movies.length > 1 ? <MoviesGallery moviesList={movies} state={{ from: location }}/> : null}\n    <Outlet />\n  </main>\n  )\n}\n\nexport default Movies\n"],"names":["strokeColor","strokeWidth","animationDuration","width","visible","moviesList","location","useLocation","className","Styles","map","id","title","to","state","from","fetchMoviesOnSearch","query","fetch","headers","accept","Authorization","then","response","ok","json","Promise","reject","Error","onSubmitForm","useState","setQuery","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","page","setPage","movies","setMovies","isLoading","setIsLoading","setError","useEffect","apiSearch","data","searchMovies","results","catch","error","finally","Loader","length","MoviesGallery"],"sourceRoot":""}