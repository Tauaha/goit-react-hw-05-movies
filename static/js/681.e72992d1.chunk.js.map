{"version":3,"file":"static/js/681.e72992d1.chunk.js","mappings":"4JAaA,IAVc,WACd,OAAO,SAAC,KAAD,CACLA,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAEV,C,2ECVD,EAAgC,qCAAhC,EAA4E,4BAA5E,EAA+G,4B,SC0B/G,EArBsB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAEjBC,GAAWC,EAAAA,EAAAA,MAChB,OAAQ,eAAIC,UAAWC,EAAf,SACAJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAKC,EAAR,EAAQA,MAAR,OAChB,eAAaJ,UAAWC,EAAxB,UACG,SAAC,KAAD,CAAMI,GAAE,WAAMF,GAAMG,MAAO,CAACC,KAAMT,GAAWE,UAAWC,EAAxD,SACAG,KAFMD,EADO,KAOzB,C,6HCbDK,EAAAA,EAAAA,SAAAA,QADY,8BAIL,IAAMC,EAAa,mCAAG,+GAEJD,EAAAA,EAAAA,IAAA,uCAPb,qCAKiB,cAEnBE,EAFmB,gBAGNA,EAAOC,KAAKC,QAHN,cAGnBD,EAHmB,yBAIlBA,GAJkB,kCAMzBE,QAAQC,MAAR,MANyB,0DAAH,qD,2BCgC1B,EA9Ba,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAV,eAkBE,OAdFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBH,GAAa,GAFG,SAGYV,IAHZ,OAGVc,EAHU,OAIhBN,EAAUM,GAJM,gDAKDH,EAAS,EAAD,IALP,yBAMhBD,GAAa,GANG,4EAAH,qDASjBG,GACD,GAAE,KAIH,6BACK,wBAAI,mBACHJ,IAAa,SAACM,EAAA,EAAD,IACbR,EAAOS,OAAS,GAAI,SAACC,EAAA,EAAD,CAAe7B,WAAYmB,IAAY,OAG7D,C","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","components/services/trendMovies-api.jsx","pages/Home.jsx"],"sourcesContent":["import { RotatingLines } from  'react-loader-spinner'\n\n\nconst Loader =()=>{\nreturn(<RotatingLines\n  strokeColor=\"grey\"\n  strokeWidth=\"5\"\n  animationDuration=\"0.75\"\n  width=\"96\"\n  visible={true}\n/>)\n}\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"MoviesGallery\":\"MoviesGallery_MoviesGallery__tqAIU\",\"item\":\"MoviesGallery_item__rY1Lr\",\"Link\":\"MoviesGallery_Link__-IlD5\"};","\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Styles from 'components/MoviesGallery/MoviesGallery.module.css'\n\nconst MoviesGallery = ({ moviesList }) => {\n   \n  const location = useLocation()\n   return (<ul className={Styles.MoviesGallery} >\n          {moviesList.map(({ id,  title }) => (\n          <li key={id} className={Styles.item} >\n             <Link to={`/${id}`} state={{from: location}} className={Styles.Link}>\n            {title}\n              </Link>\n            </li>))}\n  </ul>)\n}\n     \n  \nMoviesGallery.propTypes ={\n    moviesList: PropTypes.array.isRequired\n \n }        \n\n\n\nexport default MoviesGallery\n","\nimport axios from 'axios';\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\naxios.defaults.baseURL = URL;\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\nexport const dataMovieList = async () => {\n  try {\n    const server = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n    const data = await server.data.results;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\n\n","\nimport { useEffect, useState, React } from 'react'\nimport {dataMovieList} from 'components/services/trendMovies-api'\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery'\nimport Loader from \"components/Loader/Loader\";\n\n\n\n\nconst Home = () => {\nconst [movies, setMovies] = useState([])\nconst [isLoading, setIsLoading] = useState(false)\nconst [ , setError] = useState(null);\n\n\n\nuseEffect(()=> {\n  const getTrending = async () => {\n    try {\n      setIsLoading(true);\n      const responsMovies = await dataMovieList();\n      setMovies(responsMovies)\n    } catch (error) {setError(error)} finally {\n      setIsLoading(false);\n    }\n  };\n  getTrending();\n}, []);\n\n\n  return (\n<main>\n     <h1>Trending Today</h1>\n     {isLoading && <Loader/>}\n    { movies.length > 1 ? <MoviesGallery moviesList={movies}/> : null}\n    </main>\n\n  )}\n\nexport default Home\n"],"names":["strokeColor","strokeWidth","animationDuration","width","visible","moviesList","location","useLocation","className","Styles","map","id","title","to","state","from","axios","dataMovieList","server","data","results","console","error","useState","movies","setMovies","isLoading","setIsLoading","setError","useEffect","getTrending","responsMovies","Loader","length","MoviesGallery"],"sourceRoot":""}